name: Coverage Report
on: [pull_request]
jobs:
  pytest-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Run and write pytest
      run: |
        set -o pipefail
        poetry run pytest --cov=mxcubecore --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt

    - name: Pytest coverage comment
      id: coverage-comment
      uses: MishaKav/pytest-coverage-comment@v1.1.35
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
        pytest-xml-coverage-path: ./coverage.xml

    - name: Check the output coverage
      run: |
        echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
        echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
        echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
        echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"

        echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"

        echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
        echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
        echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
        echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
        echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
        echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
