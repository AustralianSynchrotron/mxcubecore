name: Create/Update Tag
on:
  push:
    branches:
      - main
jobs:
  create-version-tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Set tag name
      id: set-tag
      run:  echo "::set-output name=tag_name::v$(poetry run python -c 'import mxcubecore; print(mxcubecore.__version__)')"

    - name: Check tag exists
      id: check-tag-exists
      uses: actions/github-script@v6
      env:
        TAG: ${{ steps.set-tag.outputs.tag_name }}
      with:
        github-token: ${{ github.token }}
        script: |
          // https://github.com/mukunku/tag-exists-action
          var exists = 'false';
          try {
              const getRefResponse = await github.rest.git.getRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}"
              });

              if (getRefResponse.status === 200) {
                  console.log("Tag was found");
                  exists = 'true';
              }
          } catch(error) {
              console.log("Tag was not found");
          }
          core.setOutput('exists', exists);

    - name: Update tag
      uses: actions/github-script@v6
      if: steps.check-tag-exists.outputs.exists == 'true'
      env:
        TAG: ${{ steps.set-tag.outputs.tag_name }}
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.git.updateRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
            sha: context.sha
          })

    - name: Create tag
      uses: actions/github-script@v6
      if: steps.check-tag-exists.outputs.exists != 'true'
      env:
        TAG: ${{ steps.set-tag.outputs.tag_name }}
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
            sha: context.sha
          })
